name: Release

on:
  push:
    branches:
      - main

env:
  COPY_SOURCE: master.zip

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
          package-name: ${{ github.event.repository.name }}
  lambdas:
    if: ${{ needs.release-please.outputs.release_created }}
    needs: release-please
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.json.outputs.MATRIX }}
    steps:
      - uses: actions/checkout@v3
      - name: Read in lambdas names from JSON
        id: json
        run: |
          echo "MATRIX=$(jq -c . < ./lambdas.json)" >> $GITHUB_OUTPUT
  promote:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: [lambdas, release-please]
    permissions:
      id-token: write
    strategy:
      matrix:
        lambdaName: ${{ fromJSON(needs.lambdas.outputs.matrix).lambdas }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ secrets.RSP_AWS_ACCOUNT }}:role/GithubActionsRole
          role-session-name: GithubActionsSession
          aws-region: ${{ secrets.RSP_AWS_REGION }}
      - name: Upload to S3
        run: >
          aws s3api copy-object
          --tagging-directive REPLACE
          --tagging promote=YES
          --copy-source ${{ secrets.RSP_NONPROD_S3_BUCKET_NAME }}/${{ vars.S3_KEY_PATH  }}/${{ matrix.lambdaName }}/${{ env.COPY_SOURCE }}
          --key ${{ vars.S3_KEY_PATH }}/${{ matrix.lambdaName }}/release-${{ needs.release-please.outputs.tag_name }}.zip
          --bucket ${{ secrets.RSP_NONPROD_S3_BUCKET_NAME }}
