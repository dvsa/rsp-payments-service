{
  "name": "awslambda-apigateway-dynamodb-serverless-offline-template",
  "version": "1.0.0",
  "description": "Emulate AWS Î», API Gateway & DynamoDB locally when developing",
  "repository": "<replace>",
  "author": "",
  "license": "MIT",
  "scripts": {
    "start": "rm -rf build && npm run copy-localfiles && npm run parallel",
    "parallel": "./node_modules/.bin/run-p watch offline",
    "presetup": "npm run copy-localfiles",
    "offline": "cd ./build && sls openapi generate -f json && npm run openapireplace && sls offline start --noAuth",
    "offline-with-auth": "cd ./build && sls openapi generate -f json && npm run openapireplace && sls offline start",
    "lint": "./node_modules/.bin/eslint src",
    "watch": "./node_modules/.bin/nodemon --watch src --exec npm run compile",
    "compile": "./node_modules/.bin/babel src -d build",
    "integration": "./node_modules/.bin/run-p offline wait-on-sls",
    "wait-on-sls": "wait-on tcp:localhost:3000 && npm run test-i",
    "predeploy": "npm install && npm run prepush",
    "test": "./node_modules/.bin/mocha --require babel-register src/**/*.unit.js",
    "test-i": "./node_modules/.bin/mocha --require babel-register src/test/**/*.serviceInt.js",
    "copy-localfiles": "npm run copy-sls && npm run copy-mockdata && npm run copy-models && npm run copy-openapi",
    "copy-sls": "./node_modules/.bin/copyfiles -f serverless/*.yml build",
    "copy-mockdata": "./node_modules/.bin/copyfiles mock-data/*.json build",
    "copy-models": "./node_modules/.bin/copyfiles -f src/models/*.json build/models",
    "copy-package": "./node_modules/.bin/copyfiles package.json build/",
    "copy-openapi": "./node_modules/.bin/copyfiles openapiReplace.js build/",
    "deploy-AWS": "npm run copy-package && npm run copy-sls && cd ./build && npm install --production && sls deploy",
    "openapireplace": "node openapiReplace.js",
    "start-build": "rm -rf build && npm run copy-localfiles && npm run compile && npm run copy-package && npm run build-node-modules && npm run post-build-cleanup && npm run build-artifact && rm -f build/serverless.yml",
    "build-node-modules": "cd build && npm install --production",
    "build-artifact": "cd build && rm -rf artifacts && pwd && sls package --package artifacts",
    "build-openApi": "cd build && sls openapi generate -f json && npm run openapireplace",
    "post-build-cleanup": "rm -rf build/mock-data && rm -f build/package.json && rm -f build/openApiReplace.js && rm -f build/package-lock.json",
    "prepush": "npm run lint && npm test && npm run check-security",
    "check-security": "git secrets --scan",
    "check-security-log": "git log -p | scanrepo"
  },
  "devDependencies": {
    "babel-cli": "~6.18.0",
    "babel-core": "^6.26.0",
    "babel-loader": "^7.1.2",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-env": "^1.6.1",
    "babel-register": "^6.26.0",
    "copyfiles": "^1.2.0",
    "eslint": "^4.9.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-plugin-import": "^2.8.0",
    "expect": "^21.2.1",
    "mocha": "^4.0.1",
    "nodemon": "^1.12.1",
    "npm-run-all": "^4.1.1",
    "replace": "^0.3.0",
    "rimraf": "^2.6.2",
    "serverless": "^1.23.0",
    "serverless-dynamodb-local": "^0.2.26",
    "serverless-offline": "^3.16.0",
    "serverless-openapi-documentation": "^0.3.0",
    "sinon": "^4.0.2",
    "supertest": "^3.0.0",
    "wait-on": "^2.0.2"
  },
  "dependencies": {
    "aws-sdk": "^2.140.0",
    "joi": "^13.1.2",
    "request": "^2.83.0",
    "request-promise": "^4.2.2",
    "serverless-dynamodb-client": "0.0.2",
    "uuid": "^3.1.0"
  }
}
